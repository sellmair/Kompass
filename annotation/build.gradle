apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

ext {
    bintrayRepo = 'sellmair'
    bintrayName = 'kompass-annotation'

    publishedGroupId = 'io.sellmair'
    libraryName = 'Kompass Annotation'
    artifact = 'kompass-annotation'

    libraryDescription = 'A powerful router for Android, written in Kotlin'

    gitUrl = 'https://github.com/sellmair/kompass'
    siteUrl = 'https://github.com/sellmair/kompass'


    libraryVersion = '0.0.1'

    developerId = 'sellmair'
    developerName = 'Sebastian Sellmair'
    developerEmail = 'sebastiansellmair@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.6"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.6"
    }
}

group = publishedGroupId                               // Maven Group ID for the artifact
apply plugin: 'com.jfrog.bintray'

version = libraryVersion


task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {


            // Thanks to https://stackoverflow.com/questions/24743562/gradle-not-including-dependencies-in-published-pom-xml
            // ###############################################################
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
            // ##############################################################

            groupId "$publishedGroupId"
            version = "$libraryVersion"
            artifactId "$bintrayName"

            artifact sourceJar
            artifact javadocJar
        }
    }
}

// Bintray

bintray {
    user = "$bintray_user"
    key = "$bintray_apikey"

    publications = ['maven']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = false //Determines whether to GPG sign the files. The default is false
                passphrase = "$bintray_gpg_password"
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
